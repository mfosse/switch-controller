#include <switch.gph>
#include <mouse.gph>
 
#define MAXGX 45.0
#define DEFAULT_MMY 0.0
#define MAX_ROUND 300.0
 
// GIVMXYF:FF000F008000000002000200FE00050A0F14191E23282D32373C41464B50555A5F64
// const uint8 mxyc[] = { 0xFF, 0x00, 0x0F, 0x00, 0x80, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0xFE, 0x00, 0x05, 0x0A, 0x0F, 0x14, 0x19, 0x1E, 0x23, 0x28, 0x2D, 0x32, 0x37, 0x3C, 0x41, 0x46, 0x4B, 0x50, 0x55, 0x5A, 0x5F, 0x64 };
// const uint8 mxyc[] = { 0xFF, 0x05, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0xFD, 0x00, 0x05, 0x0A, 0x0F, 0x14, 0x19, 0x1E, 0x23, 0x28, 0x2D, 0x32, 0x37, 0x3C, 0x41, 0x46, 0x4B, 0x50, 0x55, 0x5A, 0x5F, 0x64 };



// bool y_toggle = FALSE;
bool gyro_toggle = FALSE;

fix32 mmy;
 
init {
//     mxyconverter(mxyc);
//     mmy = DEFAULT_MMY;
}
main {
	set_val(SWITCH_ACCX, 0.0);
	set_val(SWITCH_ACCY, 0.0);
	set_val(SWITCH_ACCZ, 0.0);
    
	set_val(SWITCH_GYROX, 0.0);
	set_val(SWITCH_GYROY, 0.0);
	set_val(SWITCH_GYROZ, 0.0);
	
	gyro_();
}
 
fix32 gyro_rand(){
    return 0.075 - (rand() * 0.15);
}

void gyro_(){
	// toggle gyro controls:
	if (!is_active(BUTTON_21)) {
		return;
	}
	
	fix32 my = get_val(SWITCH_RY) / 10000.0;
	mmy = clamp(mmy + my, -MAXGX , MAXGX);
	set_val(SWITCH_ACCY, MAX_ROUND / 6.0 * sin(mmy / MAXGX));
	if (abs(mmy) != MAXGX ){
		set_val(SWITCH_GYROX, MAX_ROUND * sin(my));
	} else {
		set_val(SWITCH_GYROX, 0.0);
	}
	set_val(SWITCH_ACCZ, abs(get_val(SWITCH_ACCY)) - 25.0);
	set_val(SWITCH_GYROZ, MAX_ROUND * sin(get_val(SWITCH_RX)/10000.0) * -get_val(SWITCH_ACCZ) / 25.0 + gyro_rand());
	set_val(SWITCH_GYROY, MAX_ROUND * sin(get_val(SWITCH_RX)/10000.0) * -get_val(SWITCH_ACCY) / 25.0 + gyro_rand());
	
	set_val(SWITCH_ACCX, 0.0);
	set_val(SWITCH_RY, 0.0);
	set_val(SWITCH_RX, 0.0);
}